; Listing generated by Microsoft (R) Optimizing Compiler Version 19.32.31332.0 

	TITLE	C:\Users\23035\Desktop\Home\C++\shellcodecore\iat_relocation.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??0workspace@@QAE@AAUmsvc@@@Z			; workspace::workspace
PUBLIC	??1workspace@@QAE@XZ				; workspace::~workspace
PUBLIC	?Proc@@YAIAAUkernel@@AAUmsvc@@AAUlogstream@@AAUworkspace@@K@Z ; Proc
PUBLIC	_entry@0
EXTRN	??0kernel@@QAE@XZ:PROC				; kernel::kernel
EXTRN	??0msvc@@QAE@ABUkernel@@@Z:PROC			; msvc::msvc
EXTRN	??0cabinet@@QAE@ABUkernel@@@Z:PROC		; cabinet::cabinet
EXTRN	??0logstream@@QAE@AAUmsvc@@PBD@Z:PROC		; logstream::logstream
EXTRN	??1logstream@@QAE@XZ:PROC			; logstream::~logstream
EXTRN	??6logstream@@QAEAAU0@PBD@Z:PROC		; logstream::operator<<
; Function compile flags: /Ogspy
;	COMDAT _entry@0
_TEXT	SEGMENT
_logstream$ = -1156					; size = 1044
_cabinet$ = -112					; size = 36
_msvc$ = -76						; size = 72
_workspace$ = -4					; size = 84
_kernel$ = 80						; size = 36
_image_base$ = 116					; size = 4
_entry@0 PROC						; COMDAT
; File C:\Users\23035\Desktop\Home\C++\AddShell\shellcode\iat_relocation.cpp
; Line 243
	push	ebp
	lea	ebp, DWORD PTR [esp-120]
	sub	esp, 1276				; 000004fcH
	push	ebx
; Line 256
	lea	ecx, DWORD PTR _kernel$[ebp]
	call	??0kernel@@QAE@XZ			; kernel::kernel
; Line 257
	lea	eax, DWORD PTR _kernel$[ebp]
	push	eax
	lea	ecx, DWORD PTR _msvc$[ebp]
	call	??0msvc@@QAE@ABUkernel@@@Z		; msvc::msvc
; Line 258
	lea	eax, DWORD PTR _kernel$[ebp]
	push	eax
	lea	ecx, DWORD PTR _cabinet$[ebp]
	call	??0cabinet@@QAE@ABUkernel@@@Z		; cabinet::cabinet
; Line 259
	lea	eax, DWORD PTR _msvc$[ebp]
	push	eax
	lea	ecx, DWORD PTR _workspace$[ebp]
	call	??0workspace@@QAE@AAUmsvc@@@Z		; workspace::workspace
; Line 260
	mov	eax, DWORD PTR _workspace$[ebp+40]
	lea	ecx, DWORD PTR _logstream$[ebp]
	push	DWORD PTR [eax]
	lea	eax, DWORD PTR _msvc$[ebp]
	push	eax
	call	??0logstream@@QAE@AAUmsvc@@PBD@Z	; logstream::logstream
; Line 261
	mov	eax, DWORD PTR _workspace$[ebp+44]
	lea	ecx, DWORD PTR _logstream$[ebp]
	push	DWORD PTR [eax]
	call	??6logstream@@QAEAAU0@PBD@Z		; logstream::operator<<
; Line 266
	push	ebx
; Line 267
	mov	ebx, DWORD PTR fs:48
; Line 268
	mov	ebx, DWORD PTR [ebx+8]
; Line 269
	mov	DWORD PTR _image_base$[ebp], ebx
; Line 270
	pop	ebx
; Line 278
	lea	eax, DWORD PTR _workspace$[ebp]
	push	DWORD PTR _image_base$[ebp]
	push	eax
	lea	eax, DWORD PTR _logstream$[ebp]
	push	eax
	lea	eax, DWORD PTR _msvc$[ebp]
	push	eax
	lea	eax, DWORD PTR _kernel$[ebp]
	push	eax
	call	?Proc@@YAIAAUkernel@@AAUmsvc@@AAUlogstream@@AAUworkspace@@K@Z ; Proc
	add	esp, 20					; 00000014H
; Line 279
	lea	ecx, DWORD PTR _logstream$[ebp]
	call	??1logstream@@QAE@XZ			; logstream::~logstream
	lea	ecx, DWORD PTR _workspace$[ebp]
	call	??1workspace@@QAE@XZ			; workspace::~workspace
	xor	eax, eax
; Line 280
	pop	ebx
	add	ebp, 120				; 00000078H
	leave
	ret	0
_entry@0 ENDP
_TEXT	ENDS
; Function compile flags: /Ogspy
;	COMDAT ?Proc@@YAIAAUkernel@@AAUmsvc@@AAUlogstream@@AAUworkspace@@K@Z
_TEXT	SEGMENT
_str_format$ = -32					; size = 4
tv552 = -28						; size = 4
_block_relocation$1$ = -28				; size = 4
_delta$1$ = -28						; size = 4
tv540 = -24						; size = 4
_entries_relocation$1$ = -24				; size = 4
_processed_relocation$1$ = -20				; size = 4
_dir_relocations$1$ = -16				; size = 4
_address_relocations$1$ = -12				; size = 4
_handle_module$1$ = -8					; size = 4
_lpNtHdr$1$ = -8					; size = 4
_size_image$1$ = -4					; size = 4
_kernel$ = 8						; size = 4
_msvc$ = 12						; size = 4
_logstream$ = 16					; size = 4
_workspace$ = 20					; size = 4
_pe_base$ = 24						; size = 4
?Proc@@YAIAAUkernel@@AAUmsvc@@AAUlogstream@@AAUworkspace@@K@Z PROC ; Proc, COMDAT
; File C:\Users\23035\Desktop\Home\C++\AddShell\shellcode\iat_relocation.cpp
; Line 162
	sub	esp, 32					; 00000020H
	push	ebx
; Line 166
	mov	ebx, DWORD PTR _pe_base$[esp+32]
	push	ebp
	push	esi
	push	edi
	mov	esi, DWORD PTR [ebx+60]
	add	esi, ebx
	mov	DWORD PTR _str_format$[esp+48], 680997	; 000a6425H
; Line 169
	push	64					; 00000040H
	push	12288					; 00003000H
	mov	DWORD PTR _lpNtHdr$1$[esp+56], esi
	mov	eax, DWORD PTR [esi+80]
	push	eax
	mov	DWORD PTR _size_image$1$[esp+60], eax
	mov	eax, DWORD PTR _kernel$[esp+56]
	push	0
	call	DWORD PTR [eax+8]
; Line 170
	sub	ebx, DWORD PTR [esi+52]
	mov	edi, eax
; Line 172
	mov	ebp, DWORD PTR [esi+164]
; Line 174
	xor	eax, eax
	mov	DWORD PTR _delta$1$[esp+48], ebx
	mov	ebx, DWORD PTR [esi+160]
	add	ebx, edi
	mov	DWORD PTR _dir_relocations$1$[esp+48], ebp
	mov	DWORD PTR _address_relocations$1$[esp+48], ebx
; Line 175
	test	ebp, ebp
	je	SHORT $LN3@Proc
	mov	esi, DWORD PTR _delta$1$[esp+48]
$LL2@Proc:
; Line 179
	lea	ecx, DWORD PTR [eax+ebx]
; Line 180
	add	eax, 8
; Line 182
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR _block_relocation$1$[esp+48], ecx
	sub	edx, 8
	shr	edx, 1
; Line 183
	lea	ecx, DWORD PTR [eax+ebx]
	push	0
	mov	DWORD PTR _entries_relocation$1$[esp+52], ecx
	pop	ebx
; Line 184
	je	SHORT $LN5@Proc
; Line 179
	mov	ebp, DWORD PTR _block_relocation$1$[esp+48]
	lea	eax, DWORD PTR [eax+edx*2]
	mov	DWORD PTR _processed_relocation$1$[esp+48], eax
	mov	eax, ecx
$LL6@Proc:
; Line 188
	movzx	ecx, WORD PTR [eax+ebx*2]
	mov	DWORD PTR tv540[esp+48], 4096		; 00001000H
	cmp	cx, WORD PTR tv540[esp+48]
	jb	SHORT $LN4@Proc
; Line 193
	and	ecx, 4095				; 00000fffH
	add	ecx, DWORD PTR [ebp]
; Line 194
	add	DWORD PTR [ecx+edi], esi
$LN4@Proc:
; Line 184
	inc	ebx
	cmp	ebx, edx
	jb	SHORT $LL6@Proc
	mov	eax, DWORD PTR _processed_relocation$1$[esp+48]
	mov	ebp, DWORD PTR _dir_relocations$1$[esp+48]
$LN5@Proc:
; Line 175
	mov	ebx, DWORD PTR _address_relocations$1$[esp+48]
	cmp	eax, ebp
	jb	SHORT $LL2@Proc
	mov	esi, DWORD PTR _lpNtHdr$1$[esp+48]
$LN3@Proc:
; Line 199
	mov	ebx, DWORD PTR [esi+128]
; Line 202
	mov	ebp, DWORD PTR _msvc$[esp+44]
	add	ebx, 12					; 0000000cH
	add	ebx, edi
	jmp	SHORT $LN34@Proc
$LL7@Proc:
; Line 204
	add	eax, edi
; Line 205
	push	eax
	mov	eax, DWORD PTR _kernel$[esp+48]
	call	DWORD PTR [eax]
	mov	DWORD PTR _handle_module$1$[esp+48], eax
; Line 206
	test	eax, eax
	je	$LN21@Proc
; Line 213
	mov	esi, DWORD PTR [ebx+4]
	add	esi, edi
; Line 214
	cmp	DWORD PTR [esi], 0
	je	SHORT $LN10@Proc
	mov	ebx, eax
$LL9@Proc:
; Line 216
	lea	eax, DWORD PTR _str_format$[esp+48]
	push	5
	push	eax
	call	DWORD PTR [ebp]
; Line 217
	mov	eax, DWORD PTR [esi]
	pop	ecx
	pop	ecx
	test	eax, eax
	jns	SHORT $LN14@Proc
; Line 219
	lea	eax, DWORD PTR _str_format$[esp+48]
	push	6
	push	eax
	call	DWORD PTR [ebp]
; Line 220
	movzx	eax, WORD PTR [esi]
	pop	ecx
	pop	ecx
; Line 221
	push	eax
	mov	eax, DWORD PTR _kernel$[esp+48]
	push	ebx
	call	DWORD PTR [eax+4]
	mov	DWORD PTR [esi], eax
; Line 222
	lea	eax, DWORD PTR _str_format$[esp+48]
	push	7
	push	eax
	call	DWORD PTR [ebp]
	pop	ecx
	pop	ecx
; Line 223
	jmp	SHORT $LN15@Proc
$LN14@Proc:
; Line 228
	add	eax, 2
	add	eax, edi
	push	eax
	mov	eax, DWORD PTR _kernel$[esp+48]
	push	ebx
	call	DWORD PTR [eax+4]
; Line 229
	mov	DWORD PTR [esi], eax
$LN15@Proc:
; Line 231
	add	esi, 4
	cmp	DWORD PTR [esi], 0
	jne	SHORT $LL9@Proc
	mov	ebx, DWORD PTR tv552[esp+48]
$LN10@Proc:
; Line 234
	add	ebx, 20					; 00000014H
$LN34@Proc:
; Line 202
	mov	eax, DWORD PTR [ebx]
; Line 234
	mov	DWORD PTR tv552[esp+48], ebx
	test	eax, eax
	jne	$LL7@Proc
; Line 238
	push	DWORD PTR _size_image$1$[esp+48]
	push	edi
	push	DWORD PTR _pe_base$[esp+52]
	call	DWORD PTR [ebp+4]
; Line 239
	mov	eax, DWORD PTR _kernel$[esp+56]
	add	esp, 12					; 0000000cH
	push	32768					; 00008000H
	push	0
	push	edi
	call	DWORD PTR [eax+12]
; Line 240
	xor	eax, eax
	inc	eax
$LN1@Proc:
; Line 241
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 32					; 00000020H
	ret	0
$LN21@Proc:
; Line 208
	xor	eax, eax
	jmp	SHORT $LN1@Proc
?Proc@@YAIAAUkernel@@AAUmsvc@@AAUlogstream@@AAUworkspace@@K@Z ENDP ; Proc
_TEXT	ENDS
; Function compile flags: /Ogspy
;	COMDAT ??1workspace@@QAE@XZ
_TEXT	SEGMENT
??1workspace@@QAE@XZ PROC				; workspace::~workspace, COMDAT
; _this$ = ecx
; File C:\Users\23035\Desktop\Home\C++\AddShell\shellcode\iat_relocation.cpp
; Line 148
	push	esi
	push	edi
; Line 149
	push	10					; 0000000aH
	mov	edi, ecx
	pop	esi
$LL10@workspace:
; Line 150
	dec	esi
; Line 152
	cmp	DWORD PTR [edi+esi*4], 0
	je	SHORT $LN5@workspace
; Line 156
	mov	eax, DWORD PTR [edi+80]
	push	DWORD PTR [edi+esi*4]
	call	DWORD PTR [eax+24]
	pop	ecx
$LN5@workspace:
; Line 150
	test	esi, esi
	jne	SHORT $LL10@workspace
; Line 159
	pop	edi
	pop	esi
	ret	0
??1workspace@@QAE@XZ ENDP				; workspace::~workspace
_TEXT	ENDS
; Function compile flags: /Ogspy
;	COMDAT ??0workspace@@QAE@AAUmsvc@@@Z
_TEXT	SEGMENT
_ref$ = 8						; size = 4
??0workspace@@QAE@AAUmsvc@@@Z PROC			; workspace::workspace, COMDAT
; _this$ = ecx
; File C:\Users\23035\Desktop\Home\C++\AddShell\shellcode\iat_relocation.cpp
; Line 30
	push	ebx
	push	esi
	mov	esi, ecx
; Line 32
	xor	ebx, ebx
	push	40					; 00000028H
	push	ebx
	push	esi
	lea	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [esi+40], esi
	mov	DWORD PTR [esi+44], eax
	lea	eax, DWORD PTR [esi+8]
	mov	DWORD PTR [esi+48], eax
	lea	eax, DWORD PTR [esi+12]
	mov	DWORD PTR [esi+52], eax
	lea	eax, DWORD PTR [esi+16]
	mov	DWORD PTR [esi+56], eax
	lea	eax, DWORD PTR [esi+20]
	mov	DWORD PTR [esi+60], eax
	lea	eax, DWORD PTR [esi+24]
	mov	DWORD PTR [esi+64], eax
	lea	eax, DWORD PTR [esi+28]
	mov	DWORD PTR [esi+68], eax
	lea	eax, DWORD PTR [esi+32]
	mov	DWORD PTR [esi+72], eax
	lea	eax, DWORD PTR [esi+36]
	mov	DWORD PTR [esi+76], eax
	mov	eax, DWORD PTR _ref$[esp+16]
	mov	DWORD PTR [esi+80], eax
	call	DWORD PTR [eax+8]
; Line 35
	mov	eax, DWORD PTR [esi+80]
	push	31					; 0000001fH
	call	DWORD PTR [eax+12]
	mov	ecx, DWORD PTR [esi+40]
	mov	DWORD PTR [ecx], eax
; Line 36
	mov	eax, DWORD PTR [esi+40]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax], 67			; 00000043H
; Line 37
	mov	eax, DWORD PTR [esi+40]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+1], 58			; 0000003aH
; Line 38
	mov	eax, DWORD PTR [esi+40]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+2], 47			; 0000002fH
; Line 39
	mov	eax, DWORD PTR [esi+40]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+3], 85			; 00000055H
; Line 40
	mov	eax, DWORD PTR [esi+40]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+4], 115			; 00000073H
; Line 41
	mov	eax, DWORD PTR [esi+40]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+5], 101			; 00000065H
; Line 42
	mov	eax, DWORD PTR [esi+40]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+6], 114			; 00000072H
; Line 43
	mov	eax, DWORD PTR [esi+40]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+7], 115			; 00000073H
; Line 44
	mov	eax, DWORD PTR [esi+40]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+8], 47			; 0000002fH
; Line 45
	mov	eax, DWORD PTR [esi+40]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+9], 50			; 00000032H
; Line 46
	mov	eax, DWORD PTR [esi+40]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+10], 51			; 00000033H
; Line 47
	mov	eax, DWORD PTR [esi+40]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+11], 48			; 00000030H
; Line 48
	mov	eax, DWORD PTR [esi+40]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+12], 51			; 00000033H
; Line 49
	mov	eax, DWORD PTR [esi+40]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+13], 53			; 00000035H
; Line 50
	mov	eax, DWORD PTR [esi+40]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+14], 47			; 0000002fH
; Line 51
	mov	eax, DWORD PTR [esi+40]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+15], 68			; 00000044H
; Line 52
	mov	eax, DWORD PTR [esi+40]
; Line 69
	push	31					; 0000001fH
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+16], 101			; 00000065H
	mov	eax, DWORD PTR [esi+40]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+17], 115			; 00000073H
	mov	eax, DWORD PTR [esi+40]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+18], 107			; 0000006bH
	mov	eax, DWORD PTR [esi+40]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+19], 116			; 00000074H
	mov	eax, DWORD PTR [esi+40]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+20], 111			; 0000006fH
	mov	eax, DWORD PTR [esi+40]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+21], 112			; 00000070H
	mov	eax, DWORD PTR [esi+40]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+22], 47			; 0000002fH
	mov	eax, DWORD PTR [esi+40]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+23], 108			; 0000006cH
	mov	eax, DWORD PTR [esi+40]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+24], 111			; 0000006fH
	mov	eax, DWORD PTR [esi+40]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+25], 103			; 00000067H
	mov	eax, DWORD PTR [esi+40]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+26], 46			; 0000002eH
	mov	eax, DWORD PTR [esi+40]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+27], 116			; 00000074H
	mov	eax, DWORD PTR [esi+40]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+28], 120			; 00000078H
	mov	eax, DWORD PTR [esi+40]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+29], 116			; 00000074H
	mov	eax, DWORD PTR [esi+40]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+30], bl
	mov	eax, DWORD PTR [esi+80]
	call	DWORD PTR [eax+12]
	mov	ecx, DWORD PTR [esi+44]
	mov	DWORD PTR [ecx], eax
; Line 70
	mov	eax, DWORD PTR [esi+44]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax], 73			; 00000049H
; Line 71
	mov	eax, DWORD PTR [esi+44]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+1], 110			; 0000006eH
; Line 72
	mov	eax, DWORD PTR [esi+44]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+2], 105			; 00000069H
; Line 73
	mov	eax, DWORD PTR [esi+44]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+3], 116			; 00000074H
; Line 74
	mov	eax, DWORD PTR [esi+44]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+4], 32			; 00000020H
; Line 75
	mov	eax, DWORD PTR [esi+44]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+5], 83			; 00000053H
; Line 76
	mov	eax, DWORD PTR [esi+44]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+6], 117			; 00000075H
; Line 77
	mov	eax, DWORD PTR [esi+44]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+7], 99			; 00000063H
; Line 78
	mov	eax, DWORD PTR [esi+44]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+8], 99			; 00000063H
; Line 79
	mov	eax, DWORD PTR [esi+44]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+9], 101			; 00000065H
; Line 80
	mov	eax, DWORD PTR [esi+44]
; Line 103
	push	17					; 00000011H
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+10], 115			; 00000073H
	mov	eax, DWORD PTR [esi+44]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+11], 115			; 00000073H
	mov	eax, DWORD PTR [esi+44]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+12], 101			; 00000065H
	mov	eax, DWORD PTR [esi+44]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+13], 100			; 00000064H
	mov	eax, DWORD PTR [esi+44]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+14], 32			; 00000020H
	mov	eax, DWORD PTR [esi+44]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+15], 119			; 00000077H
	mov	eax, DWORD PTR [esi+44]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+16], 105			; 00000069H
	mov	eax, DWORD PTR [esi+44]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+17], 116			; 00000074H
	mov	eax, DWORD PTR [esi+44]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+18], 104			; 00000068H
	mov	eax, DWORD PTR [esi+44]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+19], 32			; 00000020H
	mov	eax, DWORD PTR [esi+44]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+20], 76			; 0000004cH
	mov	eax, DWORD PTR [esi+44]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+21], 111			; 0000006fH
	mov	eax, DWORD PTR [esi+44]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+22], 103			; 00000067H
	mov	eax, DWORD PTR [esi+44]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+23], 115			; 00000073H
	mov	eax, DWORD PTR [esi+44]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+24], 116			; 00000074H
	mov	eax, DWORD PTR [esi+44]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+25], 114			; 00000072H
	mov	eax, DWORD PTR [esi+44]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+26], 101			; 00000065H
	mov	eax, DWORD PTR [esi+44]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+27], 97			; 00000061H
	mov	eax, DWORD PTR [esi+44]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+28], 109			; 0000006dH
	mov	eax, DWORD PTR [esi+44]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+29], 33			; 00000021H
	mov	eax, DWORD PTR [esi+44]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+30], bl
	mov	eax, DWORD PTR [esi+80]
	call	DWORD PTR [eax+12]
	mov	ecx, DWORD PTR [esi+48]
	mov	DWORD PTR [ecx], eax
; Line 104
	mov	eax, DWORD PTR [esi+48]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax], 100			; 00000064H
; Line 105
	mov	eax, DWORD PTR [esi+48]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+1], 101			; 00000065H
; Line 106
	mov	eax, DWORD PTR [esi+48]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+2], 99			; 00000063H
; Line 107
	mov	eax, DWORD PTR [esi+48]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+3], 111			; 0000006fH
; Line 108
	mov	eax, DWORD PTR [esi+48]
	mov	eax, DWORD PTR [eax]
; Line 123
	push	8
	mov	BYTE PTR [eax+4], 109			; 0000006dH
	mov	eax, DWORD PTR [esi+48]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+5], 112			; 00000070H
	mov	eax, DWORD PTR [esi+48]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+6], 114			; 00000072H
	mov	eax, DWORD PTR [esi+48]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+7], 101			; 00000065H
	mov	eax, DWORD PTR [esi+48]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+8], 115			; 00000073H
	mov	eax, DWORD PTR [esi+48]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+9], 115			; 00000073H
	mov	eax, DWORD PTR [esi+48]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+10], 32			; 00000020H
	mov	eax, DWORD PTR [esi+48]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+11], 115			; 00000073H
	mov	eax, DWORD PTR [esi+48]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+12], 105			; 00000069H
	mov	eax, DWORD PTR [esi+48]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+13], 122			; 0000007aH
	mov	eax, DWORD PTR [esi+48]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+14], 101			; 00000065H
	mov	eax, DWORD PTR [esi+48]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+15], 58			; 0000003aH
	mov	eax, DWORD PTR [esi+48]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+16], bl
	mov	eax, DWORD PTR [esi+80]
	call	DWORD PTR [eax+12]
	mov	ecx, DWORD PTR [esi+52]
; Line 134
	push	8
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [esi+52]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax], 95			; 0000005fH
	mov	eax, DWORD PTR [esi+52]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+1], 97			; 00000061H
	mov	eax, DWORD PTR [esi+52]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+2], 99			; 00000063H
	mov	eax, DWORD PTR [esi+52]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+3], 109			; 0000006dH
	mov	eax, DWORD PTR [esi+52]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+4], 100			; 00000064H
	mov	eax, DWORD PTR [esi+52]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+5], 108			; 0000006cH
	mov	eax, DWORD PTR [esi+52]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+6], 110			; 0000006eH
	mov	eax, DWORD PTR [esi+52]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+7], bl
	mov	eax, DWORD PTR [esi+80]
	call	DWORD PTR [eax+12]
	mov	ecx, DWORD PTR [esi+56]
	add	esp, 32					; 00000020H
	mov	DWORD PTR [ecx], eax
; Line 135
	mov	eax, DWORD PTR [esi+56]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax], 95			; 0000005fH
; Line 136
	mov	eax, DWORD PTR [esi+56]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+1], 119			; 00000077H
; Line 137
	mov	eax, DWORD PTR [esi+56]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+2], 99			; 00000063H
; Line 138
	mov	eax, DWORD PTR [esi+56]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+3], 109			; 0000006dH
; Line 139
	mov	eax, DWORD PTR [esi+56]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+4], 100			; 00000064H
; Line 140
	mov	eax, DWORD PTR [esi+56]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+5], 108			; 0000006cH
; Line 141
	mov	eax, DWORD PTR [esi+56]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+6], 110			; 0000006eH
; Line 142
	mov	eax, DWORD PTR [esi+56]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [eax+7], bl
; Line 146
	mov	eax, esi
	pop	esi
	pop	ebx
	ret	4
??0workspace@@QAE@AAUmsvc@@@Z ENDP			; workspace::workspace
_TEXT	ENDS
END
