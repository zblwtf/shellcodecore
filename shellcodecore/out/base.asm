; Listing generated by Microsoft (R) Optimizing Compiler Version 19.32.31332.0 

	TITLE	C:\Users\23035\Desktop\Home\C++\shellcodecore\out\base.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?GetProcAddressWithHash@@YAPAXKK@Z		; GetProcAddressWithHash
; Function compile flags: /Ogspy
;	COMDAT ?GetProcAddressWithHash@@YAPAXKK@Z
_TEXT	SEGMENT
_pModuleBase$1$ = -16					; size = 4
_dwExportDirRVA$1$ = -12				; size = 4
_BaseDllName$1$ = -8					; size = 4
_pTempChar$1$ = -8					; size = 4
_dwNumFunctions$1$ = -4					; size = 4
_dwModuleHash_$ = 8					; size = 4
_dwFunctionHash_$ = 12					; size = 4
?GetProcAddressWithHash@@YAPAXKK@Z PROC			; GetProcAddressWithHash, COMDAT
; File C:\Users\23035\Desktop\Home\C++\shellcodecore\base.cpp
; Line 55
	mov	eax, DWORD PTR fs:48
	sub	esp, 16					; 00000010H
; Line 61
	mov	eax, DWORD PTR [eax+12]
	push	ebx
	push	ebp
	push	esi
	mov	esi, DWORD PTR [eax+12]
	push	edi
	jmp	$LN37@GetProcAdd
$LL2@GetProcAdd:
; Line 66
	mov	edx, DWORD PTR [esi+24]
	xor	ecx, ecx
; Line 67
	mov	eax, DWORD PTR [esi+48]
	mov	ebx, DWORD PTR [esi+44]
; Line 72
	mov	esi, DWORD PTR [esi]
	mov	DWORD PTR _BaseDllName$1$[esp+32], eax
	mov	eax, DWORD PTR [edx+60]
	mov	DWORD PTR _pModuleBase$1$[esp+32], edx
	mov	eax, DWORD PTR [eax+edx+120]
	mov	DWORD PTR _dwExportDirRVA$1$[esp+32], eax
; Line 75
	test	eax, eax
	je	SHORT $LN37@GetProcAdd
; Line 81
	shr	ebx, 16					; 00000010H
	xor	edi, edi
	test	ebx, ebx
	je	SHORT $LN5@GetProcAdd
	mov	edx, DWORD PTR _BaseDllName$1$[esp+32]
$LL6@GetProcAdd:
; Line 87
	movsx	ebp, BYTE PTR [edx+edi]
	ror	ecx, 13					; 0000000dH
	cmp	BYTE PTR [edx+edi], 97			; 00000061H
	jl	SHORT $LN14@GetProcAdd
; Line 89
	add	ecx, -32				; ffffffe0H
$LN14@GetProcAdd:
; Line 81
	add	ecx, ebp
	inc	edi
	cmp	edi, ebx
	jb	SHORT $LL6@GetProcAdd
	mov	edx, DWORD PTR _pModuleBase$1$[esp+32]
	mov	eax, DWORD PTR _dwExportDirRVA$1$[esp+32]
$LN5@GetProcAdd:
; Line 96
	cmp	ecx, DWORD PTR _dwModuleHash_$[esp+28]
	jne	SHORT $LN37@GetProcAdd
; Line 101
	mov	ebp, DWORD PTR [eax+edx+32]
; Line 103
	xor	edi, edi
	mov	ecx, DWORD PTR [eax+edx+24]
	add	ebp, edx
	mov	DWORD PTR _dwNumFunctions$1$[esp+32], ecx
	test	ecx, ecx
	je	SHORT $LN37@GetProcAdd
$LL9@GetProcAdd:
; Line 106
	mov	eax, DWORD PTR [ebp]
	xor	ebx, ebx
	add	eax, edx
; Line 107
	lea	ebp, DWORD PTR [ebp+4]
	mov	DWORD PTR _pTempChar$1$[esp+32], eax
	mov	edx, eax
$LL12@GetProcAdd:
; Line 114
	mov	cl, BYTE PTR [edx]
	ror	ebx, 13					; 0000000dH
	movsx	eax, cl
	add	ebx, eax
; Line 115
	inc	edx
; Line 116
	test	cl, cl
	jne	SHORT $LL12@GetProcAdd
; Line 117
	mov	edx, DWORD PTR _pModuleBase$1$[esp+32]
	cmp	ebx, DWORD PTR _dwFunctionHash_$[esp+28]
	je	SHORT $LN25@GetProcAdd
; Line 103
	inc	edi
	cmp	edi, DWORD PTR _dwNumFunctions$1$[esp+32]
	jb	SHORT $LL9@GetProcAdd
$LN37@GetProcAdd:
; Line 63
	cmp	DWORD PTR [esi+24], 0
	jne	$LL2@GetProcAdd
; Line 126
	xor	eax, eax
$LN1@GetProcAdd:
	pop	edi
; Line 127
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 16					; 00000010H
	ret	0
$LN25@GetProcAdd:
; Line 119
	mov	esi, DWORD PTR _dwExportDirRVA$1$[esp+32]
	mov	eax, DWORD PTR [esi+edx+36]
	lea	eax, DWORD PTR [eax+edi*2]
; Line 120
	movzx	ecx, WORD PTR [eax+edx]
	mov	eax, DWORD PTR [esi+edx+28]
	lea	eax, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR [eax+edx]
	add	eax, edx
	jmp	SHORT $LN1@GetProcAdd
?GetProcAddressWithHash@@YAPAXKK@Z ENDP			; GetProcAddressWithHash
_TEXT	ENDS
END
